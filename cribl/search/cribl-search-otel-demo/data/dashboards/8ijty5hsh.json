{"schedule":{"enabled":false,"cronSchedule":"0 0 * * *","tz":"UTC","keepLastN":2},"groups":{},"name":"Otel_Direct_access","elements":[{"config":{"markdown":"# Example analysis of OpenTelemetry traces\n\nTranslating OpenTelemetry data into metrics and insights.\n\n## R.E.D. metrics\nThese are the visualisations for the [R.E.D. metrics](https://www.splunk.com/en_us/blog/learn/red-monitoring.html) analysis\n- Request volume analysis - `frontend` service is the app gateway, showing number of requests per HTTP method/path\n- Request volumes over time\n- Durations - max, P95, avg request durations for the `frontend` service.\n- Durations over time\n- Errors breakdown\n- Errors over time\n- Raw data to be reminded of what fields are available.\n- Ten longest traces\n- Individual trace analysis","axis":{}},"id":"9r5w99gsx","layout":{"x":0,"y":0,"w":12,"h":4},"variant":"markdown","type":"markdown.default"},{"search":{"type":"inline","query":"dataset=direct_access_otel_traces \n// Selecting an entrance service into the app and only where it is being invoked\n| where ['service.name']=='frontend' and kind=='SPAN_KIND_SERVER'\n\n// Creating a grouping to aggregate the request count on\n| extend grouping = split(attributes['http.target'], '?', 0)\n| where grouping !contains '.'\n| extend grouping = iff( grouping startswith '/api/products/', '/api/products', grouping)\n| extend grouping = iff( grouping startswith '/api/data/', '/api/data', grouping)\n| extend label = strcat(attributes['http.method'], ' ', grouping)\n\n// The aggregation itself\n| summarize volume=count() by route=label\n\n// Calculate the labels to be shown on the graph \n| eventstats total=sum(volume)\n| extend pct = round(100*volume/total,1)\n| extend label1=strcat(route, \" - \", pct, \"%\")\n\n// Prep the data for display\n| project label1, pct\n| order by pct desc ","earliest":"-1h","latest":"now"},"id":"p2pknsz58","layout":{"x":0,"y":4,"w":12,"h":4},"type":"chart.column","empty":true,"title":"request volume analysis"},{"search":{"type":"inline","query":"dataset=direct_access_otel_traces \n// Selecting the entrance service and where it is being ivoked\n| where ['service.name']=='frontend' and kind=='SPAN_KIND_SERVER'\n\n// Calculate trace duration\n| extend duration = (end_time - start_time ) / 1000000\n\n// Create the grouping\n| extend grouping = split(attributes['http.target'], '?', 0)\n| where grouping !contains '.'\n| extend grouping = iff( grouping startswith '/api/products/', '/api/products', grouping)\n| extend grouping = iff( grouping startswith '/api/data/', '/api/data', grouping)\n\n// Aggregation itself\n| timestats volume=count() by route=strcat(attributes['http.method'], ' ', grouping)","earliest":"-1h","latest":"now"},"id":"e8mfmoobg","layout":{"x":0,"y":8,"w":12,"h":4},"type":"chart.column","config":{},"title":"Time series analysis of changes in volume of requests Changes number of requests over time per path"},{"search":{"type":"inline","query":"dataset=direct_access_otel_traces \n// Selecting the entrance service and where it is being ivoked\n| where ['service.name']=='frontend' and kind=='SPAN_KIND_SERVER'\n\n// Calculate trace duration\n| extend duration = (end_time - start_time ) / 1000000\n\n// Create the grouping\n| extend grouping = split(attributes['http.target'], '?', 0)\n| where grouping !contains '.'\n| extend grouping = iff( grouping startswith '/api/products/', '/api/products', grouping)\n| extend grouping = iff( grouping startswith '/api/data/', '/api/data', grouping)\n\n// Aggregation\n| summarize volume=count(), avg_duration=avg(duration), max_duration=max(duration), p95_duration=percentile(duration, 95) \n    by route=strcat(attributes['http.method'], ' ', grouping) \n\n// Prep the data for display\n| order by volume desc \n| project route, max_duration, p95_duration, avg_duration","earliest":"-1h","latest":"now"},"id":"drwnbz5r7","layout":{"x":0,"y":12,"w":12,"h":4},"type":"chart.column","empty":true,"title":"Breakdown of durations per path"},{"search":{"type":"inline","query":"dataset=direct_access_otel_traces \n// Selecting the entrance service and where it is being ivoked\n| where ['service.name']=='frontend' and kind=='SPAN_KIND_SERVER'\n\n// Calculate trace duration\n| extend duration = (end_time - start_time ) / 1000000\n\n// Create the grouping\n| extend grouping = split(attributes['http.target'], '?', 0)\n| where grouping !contains '.'\n| extend grouping = iff( grouping startswith '/api/products/', '/api/products', grouping)\n| extend grouping = iff( grouping startswith '/api/data/', '/api/data', grouping)\n\n// Aggregation\n| timestats p95_duration=percentile(duration, 95) \n    by route=strcat(attributes['http.method'], ' ', grouping) ","earliest":"-1h","latest":"now"},"id":"shr2xk7zh","layout":{"x":0,"y":16,"w":12,"h":4},"type":"chart.column","config":{},"title":"hanges in P95 over time per path"},{"search":{"type":"inline","query":"dataset=direct_access_otel_traces \n// Select all error traces for all components\n| extend status=attributes['http.status_code'] \n| where isnotnull(status) and toint(status) >= 400\n\n// Aggregation per service name\n| timestats count() by strcat(['service.name'], \" - \", status)","earliest":"-1h","latest":"now"},"id":"yqy30lkk5","layout":{"x":0,"y":20,"w":12,"h":4},"type":"chart.column","empty":true,"title":"Error counts per code/component over time"},{"search":{"type":"inline","query":"dataset=direct_access_otel_traces \n// Select all errors from all components\n| extend status=attributes['http.status_code'] \n| where isnotnull(status) and toint(status) >= 400\n\n// Aggregation by status\n| timestats count() by status","earliest":"-1h","latest":"now"},"id":"nh7u77hqs","layout":{"x":0,"y":24,"w":12,"h":4},"type":"chart.column","empty":true,"title":"Changes in overall error count per code over time"},{"search":{"type":"inline","query":"dataset=direct_access_otel_traces \n| where ['service.name']=='frontend' and kind=='SPAN_KIND_SERVER'\n| limit 10","earliest":"-1h","latest":"now"},"id":"jlukxiht1","layout":{"x":0,"y":28,"w":12,"h":4},"type":"chart.column","empty":true,"title":"Access to raw trace data to understand what fields are available"},{"search":{"type":"inline","query":"dataset=\"direct_access_otel_traces\"\n| where ['service.name']=='frontend' and kind=='SPAN_KIND_SERVER'\n| where attributes['http.target'] startswith \"/api/cart\" \n| extend duration = (end_time - start_time) / 1000000\n| project trace_id, duration\n| top 10 by duration desc","earliest":"-1h","latest":"now"},"id":"lmlcmrpho","layout":{"x":0,"y":32,"w":12,"h":4},"type":"chart.column","config":{},"title":"Tail-based sampling showing 10 slowest traces"},{"search":{"type":"inline","query":"dataset=\"direct_access_otel_traces\" trace_id=\"85b921c50f9119d26ea107c3d288326c\"\n| extend duration = (end_time - start_time) / 1000000\n| project [\"service.name\"], name, kind, duration, span_id, parent_span_id\n| order by duration desc","earliest":"-1h","latest":"now"},"id":"74om0ytd3","layout":{"x":0,"y":36,"w":12,"h":4},"type":"chart.column","empty":true,"title":"Breakdown of spans for a particular trace"},{"search":{"type":"inline","query":"dataset=\"direct_access_otel_traces\" trace_id=\"85b921c50f9119d26ea107c3d288326c\"","earliest":"-1h","latest":"now"},"id":"u7oyt6mc8","layout":{"x":0,"y":40,"w":12,"h":4},"type":"chart.column","config":{},"title":"Raw events for a particular trace"}],"createdBy":"oidc|CriblCorpOkta|00uqbwsz1bzTYiOhK4x7","modifiedBy":"oidc|CriblCorpOkta|00uqbwsz1bzTYiOhK4x7","modified":1760709561871,"created":1760709299290,"displayCreatedBy":" ","displayModifiedBy":" "}