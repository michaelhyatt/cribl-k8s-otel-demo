{"schedule":{"enabled":false,"cronSchedule":"0 0 * * *","tz":"UTC","keepLastN":2},"groups":{},"name":"Overall_view","elements":[{"config":{"defaultValue":{"earliest":"-1h","latest":"now","timezone":"local"}},"id":"6emfj3b2d","inputId":"time","type":"input.timerange","layout":{"x":0,"y":0,"w":2,"h":2},"variant":"input"},{"config":{"markdown":"# Example analysis of OpenTelemetry traces\nTranslating OpenTelemetry data into metrics and insights.\n# R.E.D. metrics\nThese are the visualisations for the R.E.D. metrics analysis\n - Request volume analysis - frontend service is the app gateway, showing number of requests per HTTP method/path\n - Request volumes over time\n - Durations - max, P95, avg request durations for the frontend service.\n - Durations over time\n - Errors breakdown\n - Errors over time\n - Raw data to be reminded of what fields are available.\n - Ten longest traces\n - Individual trace analvsis |"},"id":"f2jyfjdzc","layout":{"x":0,"y":0,"w":6,"h":4},"variant":"markdown","type":"markdown.default"},{"config":{"colorPalette":1},"search":{"type":"inline","query":"dataset=otel_traces\n // Selecting the entrance service and where it is being ivoked\n | where resource.attributes['service.name']=='frontend' and kind==2\n // Calculate trace duration\n | extend duration = (end_time - start_time ) / 1000000\n // Create the grouping \n | extend grouping = split(attributes['http.target'], '?', 0)\n | where grouping !contains '.'\n | extend grouping = iff( grouping startswith '/api/products/', '/api/products', grouping)\n | extend grouping = iff( grouping startswith '/api/data/', '/api/data', grouping)\n\n // Aggregation itself\n | timestats volume=count() by route=strcat(attributes['http.method'], ' ', grouping)","earliest":"$time.earliest$","latest":"$time.latest$","timezone":"$time.timezone$"},"id":"m4dh29rtw","layout":{"x":6,"y":0,"w":6,"h":4},"type":"chart.line","title":"Time series analysis of changes in volume of requests : Changes number of requests over time per path"},{"config":{},"search":{"type":"inline","earliest":"$time.earliest$","latest":"$time.latest$","query":"dataset=otel_traces\n // Selecting an entrance service into the app and only where it is being invoked\n | where resource.attributes[\"service.name\"]=='frontend' AND kind==2\n // Creating a grouping to aggregate the request count on\n\n | extend grouping = split(attributes['http.target'],'?', 0)\n | where grouping !contains '.'\n | extend grouping = iff( grouping startswith '/api/products/', '/api/products', grouping)\n | extend grouping = iff( grouping startswith '/api/data/', '/api/data', grouping)\n | extend label = strcat(attributes ['http.method'], ' ', grouping)\n\n // The aggregation itself\n | summarize volume=count() by route=label\n\n // Calculate the labels to be shown on the graph\n | eventstats total=sum(volume)\n | extend pct = round (100*volume/total, 1)\n | extend label1=strcat(route, \" - \", pct, \"%\")\n\n // Prep the data for display\n | project label1, pct\n | order by pct desc","timezone":"$time.timezone$"},"id":"j73fi9tmb","layout":{"x":0,"y":4,"w":6,"h":4},"type":"chart.pie","title":"Top 5 frontend paths by request volume  : Showing call volume breakdown percentage by HTTP method and paths"},{"search":{"type":"inline","query":"dataset=otel_traces\n // Selecting the entrance service and where it is being ivoked\n | where resource.attributes['service.name']=='frontend' and kind==2\n // Calculate trace duration\n | extend duration = (end_time_unix_nano - start_time_unix_nano ) / 1000000\n // Create the grouping \n | extend grouping = split(attributes['http.target'], '?', 0)\n | where grouping !contains '.'\n | extend grouping = iff( grouping startswith '/api/products/', '/api/products', grouping)\n | extend grouping = iff( grouping startswith '/api/data/', '/api/data', grouping)\n | summarize volume=count(), avg_duration=avg(duration), max_duration=max(duration), p95_duration=percentile(duration, 95) by route=strcat(attributes['http.method'], '', grouping)\n // Prep the data for display\n | order by volume desc\n | project route, max_duration, p95_duration, avg_duration\n","earliest":"$time.earliest$","latest":"$time.latest$","timezone":"$time.timezone$"},"id":"zmt4gj5xh","layout":{"x":6,"y":4,"w":6,"h":4},"type":"chart.column","config":{}},{"config":{},"search":{"type":"inline","query":"dataset=otel_traces\n| extend status=attributes['http.status_code']\n | where isnotnull(status) and toint(status) >= 400\n\n// Aggregation per service name\n | timestats count() by strcat( resource.attributes['service.name'], \" - \", status)","earliest":"-1h","latest":"now"},"id":"zgqea8p8n","layout":{"x":0,"y":8,"w":12,"h":4},"type":"chart.column","title":"Error counts per code/component over time"}],"createdBy":"oidc|CriblCorpOkta|00uqbwsz1bzTYiOhK4x7","modifiedBy":"oidc|CriblCorpOkta|00uqbwsz1bzTYiOhK4x7","modified":1761032973184,"created":1760528938128,"displayCreatedBy":" ","displayModifiedBy":" "}